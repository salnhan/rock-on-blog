<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rockon Blogs</title>
  
  <subtitle>RoB</subtitle>
  <link href="/rockon-blog/atom.xml" rel="self"/>
  
  <link href="https://salnhan.github.io/"/>
  <updated>2019-05-12T18:59:59.176Z</updated>
  <id>https://salnhan.github.io/</id>
  
  <author>
    <name>salnhan (MT Nhan)</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Build CKAN application with Docker</title>
    <link href="https://salnhan.github.io/2018/11/18/Working-with-Docker/"/>
    <id>https://salnhan.github.io/2018/11/18/Working-with-Docker/</id>
    <published>2018-11-18T13:20:32.000Z</published>
    <updated>2019-05-12T18:59:59.176Z</updated>
    
    <content type="html"><![CDATA[<p>Howto</p><p>Table of Contents</p><ul><li><a href="#Installation">Install</a></li><li><a href="#Using">Use docker</a></li><li><a href="#Fazit">Fazit</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Howto&lt;/p&gt;
&lt;p&gt;Table of Contents&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#Installation&quot;&gt;Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Using&quot;&gt;Use docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href
      
    
    </summary>
    
      <category term="infrastructure" scheme="https://salnhan.github.io/categories/infrastructure/"/>
    
    
      <category term="docker" scheme="https://salnhan.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Working with Gulp</title>
    <link href="https://salnhan.github.io/2018/05/21/work-with-gulp/"/>
    <id>https://salnhan.github.io/2018/05/21/work-with-gulp/</id>
    <published>2018-05-21T18:37:05.138Z</published>
    <updated>2019-05-12T18:59:59.192Z</updated>
    
    <content type="html"><![CDATA[<p>Gulp is a powerful tool to automate any tasks during the web development like minify css or recompile js or css files automatically if any changes.</p><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><ul><li><a href="#Installation">Installation</a></li><li><a href="#Gulp-component">Gulp component</a></li><li><a href="#Using-Gulp-task">Using Gulp task</a></li><li><a href="#Refesh-browser-automatically">Refresh browser automatically</a></li><li><a href="#Minify-css-js">Minify css, js</a></li></ul><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><p>Run follwing npm task<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp --save-dev</span><br></pre></td></tr></table></figure></p><p>In package.json gulp with current version  will be inserted.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-site"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.0.0"</span>,</span><br><span class="line">  <span class="attr">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"hexo"</span>: &#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"3.7.1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"hexo"</span>: <span class="string">"^3.2.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-deployer-git"</span>: <span class="string">"^0.3.1"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-archive"</span>: <span class="string">"^0.1.4"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-category"</span>: <span class="string">"^0.1.3"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-index"</span>: <span class="string">"^0.2.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-tag"</span>: <span class="string">"^0.2.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-ejs"</span>: <span class="string">"^0.3.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-marked"</span>: <span class="string">"^0.3.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-stylus"</span>: <span class="string">"^0.3.1"</span>,</span><br><span class="line">    <span class="attr">"hexo-server"</span>: <span class="string">"^0.2.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"gulp"</span>: <span class="string">"^3.9.1"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Gulp-component"><a href="#Gulp-component" class="headerlink" title="Gulp component"></a>Gulp component</h3><p>Gulp tasks will be defined in <code>Gulpfile.js</code><br>A Gulpfile.js contains following components;</p><ul><li><code>gulp.task</code>: gulp task</li><li><code>gulp.src</code>: source of file</li><li><code>gulp.dest</code>: destination of endfile</li><li><code>gulp.watch</code>: watching the change of file</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'task_one'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  gulp.src(<span class="string">'./js/*.js'</span>)</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'dist/js'</span>));</span><br><span class="line"></span><br><span class="line">  gulp.src(<span class="string">'./css/*.css'</span>)</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'dist/css'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'watch_name'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    gulp.watch(<span class="string">'/css/*.css'</span>,  [<span class="string">'task_css'</span>])</span><br><span class="line">    gulp.watch(<span class="string">'/js/*.js'</span>,  [<span class="string">'task_js'</span>])</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">gulp.watch(<span class="string">'js/**/*.js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'File '</span> + event.path + <span class="string">' was '</span> + event.type + <span class="string">', running tasks...'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Using-Gulp-task"><a href="#Using-Gulp-task" class="headerlink" title="Using Gulp task"></a>Using Gulp task</h3><p>To run a gulp task<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ gulp task_one</span><br><span class="line">$ gulp watch_name</span><br></pre></td></tr></table></figure></p><h3 id="Refesh-browser-automatically"><a href="#Refesh-browser-automatically" class="headerlink" title="Refesh browser automatically"></a>Refesh browser automatically</h3><p>To refresh the browser automatically after recompile the css or js file should the npm package <code>browser-sync</code> be installed</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install browser-sync --save-dev</span><br></pre></td></tr></table></figure><p>Config in Gulpfile.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">var</span> browserSync = <span class="built_in">require</span>(<span class="string">'browser-sync'</span>).create();</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'serve'</span>, [], <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    browserSync.init(&#123;</span><br><span class="line">        server: &#123;</span><br><span class="line">            baseDir: <span class="string">'.'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    gulp.watch(<span class="string">"*.html"</span>).on(<span class="string">'change'</span>, browserSync.reload);</span><br><span class="line">    gulp.watch([<span class="string">'assets/js/*.js'</span>], browserSync.reload);</span><br><span class="line">    gulp.watch([<span class="string">'assets/css/*.css'</span>], browserSync.reload);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'serve'</span>]);</span><br></pre></td></tr></table></figure><h3 id="Minify-css-js"><a href="#Minify-css-js" class="headerlink" title="Minify css, js"></a>Minify css, js</h3><p>To minify css, js should the package <code>gulp-minify</code> and <code>gulp-minify-css</code> be installed</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-minify-css --save-dev</span><br><span class="line">npm install gulp-minify --save-dev</span><br></pre></td></tr></table></figure><p>Config in Gulpfile.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'compress'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  /config minify js</span><br><span class="line">  gulp.src(<span class="string">'assets/js/*.js'</span>) <span class="comment">//path to folder of js file</span></span><br><span class="line">    .pipe(minify(&#123;</span><br><span class="line">        exclude: [<span class="string">'tasks'</span>],</span><br><span class="line">        ignoreFiles: [<span class="string">'-min.js'</span>] <span class="comment">//ignore files</span></span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'dist/js'</span>)); <span class="comment">//path to folder to contain js file after minify</span></span><br><span class="line">  <span class="comment">//config minify css</span></span><br><span class="line">  gulp.src(<span class="string">'assets/css/*.css'</span>) <span class="comment">///path to folder of css file</span></span><br><span class="line">    .pipe(minifyCss(&#123;<span class="attr">compatibility</span>: <span class="string">'ie8'</span>&#125;))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'dist/css'</span>)); <span class="comment">//path to folder to contain css file after minify</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Gulp is a powerful tool to automate any tasks during the web development like minify css or recompile js or css files automatically if an
      
    
    </summary>
    
      <category term="frontend" scheme="https://salnhan.github.io/categories/frontend/"/>
    
    
      <category term="frontend" scheme="https://salnhan.github.io/tags/frontend/"/>
    
      <category term="gulp" scheme="https://salnhan.github.io/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>First blog with Hexo Framework</title>
    <link href="https://salnhan.github.io/2018/05/21/intro/"/>
    <id>https://salnhan.github.io/2018/05/21/intro/</id>
    <published>2018-05-21T18:37:05.138Z</published>
    <updated>2019-05-12T18:59:59.176Z</updated>
    
    <content type="html"><![CDATA[<p> In diesem Blogartikel wollte ich erzählen (oder notieren), wie ich meinen ersten Blog mit <a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> erstellt habe.<br>Anschließend erfasse ich auch, wie ein Blogartikel auf <a href="https://github.com" target="_blank" rel="noopener">GitHub</a> gehostet wird.</p><h2 id="Create-my-first-blog-article"><a href="#Create-my-first-blog-article" class="headerlink" title="Create my first blog article"></a>Create my first blog article</h2><h3 id="GitHub-Account"><a href="#GitHub-Account" class="headerlink" title="GitHub Account"></a>GitHub Account</h3><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><p><strong>Requirements</strong>:<br>&nbsp;&nbsp; <a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a> muss installiert werden (aktuelle Version).<br>&nbsp;&nbsp; <a href="https://git-scm.com/book/de/v1/Los-geht%E2%80%99s-Git-installieren" target="_blank" rel="noopener">git</a> muss installiert werden (aktuelle Version).</p><p>Die Installation des Hexo-Frameworks ist relative einfach. Dafür muss das Paket hexo-cli via npm installiert werden.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install hexo-cli global</span></span><br><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="Add-blog-folder"><a href="#Add-blog-folder" class="headerlink" title="Add blog folder"></a>Add blog folder</h3><h4 id="Configuration"><a href="#Configuration" class="headerlink" title=" Configuration"></a><i class="fa fa-gear fa-spin fa-2x" style="color: firebrick"></i> Configuration</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># i want to save my blog folder in `workspace/Code/node-projects`</span></span><br><span class="line">$ <span class="built_in">cd</span> workspace/Code/node-projects</span><br><span class="line"><span class="comment"># install blog folder `rock-on-blogs`</span></span><br><span class="line">$ hexo init rock-on-blogs</span><br></pre></td></tr></table></figure><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; In diesem Blogartikel wollte ich erzählen (oder notieren), wie ich meinen ersten Blog mit &lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=
      
    
    </summary>
    
      <category term="blog" scheme="https://salnhan.github.io/categories/blog/"/>
    
    
      <category term="hexo" scheme="https://salnhan.github.io/tags/hexo/"/>
    
      <category term="blog" scheme="https://salnhan.github.io/tags/blog/"/>
    
      <category term="framework" scheme="https://salnhan.github.io/tags/framework/"/>
    
  </entry>
  
  <entry>
    <title>Using bower</title>
    <link href="https://salnhan.github.io/2018/02/01/manage-frontend-frameworks-with-bower/"/>
    <id>https://salnhan.github.io/2018/02/01/manage-frontend-frameworks-with-bower/</id>
    <published>2018-01-31T23:00:00.000Z</published>
    <updated>2019-05-12T18:59:59.192Z</updated>
    
    <content type="html"><![CDATA[<p>Web sites are made of lots of things — frameworks, libraries, assets, and utilities. Bower manages all these things for you.<br>Keeping track of all these packages and making sure they are up to date (or set to the specific versions you need) is tricky. Bower to the rescue!<br>Bower can manage components that contain HTML, CSS, JavaScript, fonts or even image files. Bower doesn’t concatenate or minify code or do anything else - it just installs the right versions of the packages you need and their dependencies.</p><a class="fancybox" href="https://bower.io/img/bower-logo.svg" title="Sunrise" target="_blank" rel="noopener"><img src="https://bower.io/img/bower-logo.svg" alt="Sunrise"><h3 id="Install-bower"><a href="#Install-bower" class="headerlink" title="Install bower"></a>Install bower</h3><p><strong>Prerequisite</strong><br> node muss be installed</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bower muss be installed globally</span></span><br><span class="line">$ npm install -g bower</span><br></pre></td></tr></table></figure><h3 id="Create-file-bower-json"><a href="#Create-file-bower-json" class="headerlink" title="Create file bower.json"></a>Create file bower.json</h3><p>in your project’s folder run following command complete the requisitions (you can press enter):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bower init</span><br></pre></td></tr></table></figure><p>File bower.json will be created in your project’s folder like:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-theme-rockon-blog"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"authors"</span>: [</span><br><span class="line">    <span class="string">"salnhan &lt;mascit10@gmail.com&gt;"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">  <span class="attr">"homepage"</span>: <span class="string">"https://github.com/salnhan/hexo-theme-rockon-blog"</span>,</span><br><span class="line">  <span class="attr">"ignore"</span>: [</span><br><span class="line">    <span class="string">"**/.*"</span>,</span><br><span class="line">    <span class="string">"node_modules"</span>,</span><br><span class="line">    <span class="string">"bower_components"</span>,</span><br><span class="line">    <span class="string">"test"</span>,</span><br><span class="line">    <span class="string">"tests"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="configure-your-current-working-directory-in-bowerrc"><a href="#configure-your-current-working-directory-in-bowerrc" class="headerlink" title="configure your current working directory in .bowerrc"></a>configure your current working directory in .bowerrc</h3><p>you can define in <code>.bowerrc</code>, in which directory the installed packages will be stored</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"directory"</span> : <span class="string">"source/components"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>More configuration in .bowerrc can be found <a href="https://bower.io/docs/config/" target="_blank" rel="noopener">hier</a></p><h3 id="Install-new-package-and-save-it-to-bower-json"><a href="#Install-new-package-and-save-it-to-bower-json" class="headerlink" title="Install new package and save it to bower.json"></a>Install new package and save it to bower.json</h3><p><strong>If you want to install the newest version of package</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install bootstrap with current version (4.1.1)</span></span><br><span class="line">$ bower install bootstrap --save</span><br></pre></td></tr></table></figure><p>Now have a look to file bower.json:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-theme-rockon-blog"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"authors"</span>: [</span><br><span class="line">    <span class="string">"salnhan &lt;mascit10@gmail.com&gt;"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">  <span class="attr">"homepage"</span>: <span class="string">"https://github.com/salnhan/hexo-theme-rockon-blog"</span>,</span><br><span class="line">  <span class="attr">"ignore"</span>: [</span><br><span class="line">    <span class="string">"**/.*"</span>,</span><br><span class="line">    <span class="string">"node_modules"</span>,</span><br><span class="line">    <span class="string">"bower_components"</span>,</span><br><span class="line">    <span class="string">"test"</span>,</span><br><span class="line">    <span class="string">"tests"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"bootstrap"</span>: <span class="string">"^4.1.1"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>If you want to install the specify version of package</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install bootstrap with version 3.0.0</span></span><br><span class="line">$ bower install bootstrap<span class="comment">#3.0.0 --save</span></span><br></pre></td></tr></table></figure><p><strong>useful frontend packages can be install via bower</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install jquery with current version</span></span><br><span class="line">$ bower install jquery --save</span><br><span class="line"><span class="comment"># install bootstrap with current version</span></span><br><span class="line">$ bower install bootstrap --save</span><br><span class="line"><span class="comment"># install fontawesome with current version</span></span><br><span class="line">$ bower install fontawesome --save</span><br><span class="line"><span class="comment"># install parallax.js with current version</span></span><br><span class="line">$ bower install parallax.js --save</span><br></pre></td></tr></table></figure><h3 id="Install-all-packages-in-bower-json"><a href="#Install-all-packages-in-bower-json" class="headerlink" title="Install all packages in bower.json"></a>Install all packages in bower.json</h3><p>To install all packages in bower.json, just run:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bower install</span><br></pre></td></tr></table></figure><h3 id="Uninstall-package-and-remove-it-from-bower-json"><a href="#Uninstall-package-and-remove-it-from-bower-json" class="headerlink" title="Uninstall package and remove it from bower.json"></a>Uninstall package and remove it from bower.json</h3><p>To uninstall a package and remove it from the bower.json, just run:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bower uninstall bootstrap --save</span><br></pre></td></tr></table></figure><h3 id="Clear-bower-cache"><a href="#Clear-bower-cache" class="headerlink" title="Clear bower cache"></a>Clear bower cache</h3><p>Bower uses cache to save installed packages. This means, bower will download packages at the first time. At the next install will bower use the package in cache instead of connection to source</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># first install of jquery (version 3.3.1)</span></span><br><span class="line">$ bower install jquery<span class="comment">#3.3.1 --save</span></span><br><span class="line">bower jquery<span class="comment">#3.3.1            cached https://github.com/jquery/jquery-dist.git#3.3.1</span></span><br><span class="line">bower jquery<span class="comment">#3.3.1            validate 3.3.1 against https://github.com/jquery/jquery-dist.git#3.3.1</span></span><br><span class="line">bower jquery<span class="comment">#3.3.1            install jquery#3.3.1</span></span><br></pre></td></tr></table></figure><p>If you want to clear bower cache</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bower cache clear</span><br></pre></td></tr></table></figure><p><strong><em>Links:</em></strong></p><ul><li><a href="https://bower.io/" target="_blank" rel="noopener">Bower Homepage</a></li><li><a href="https://bower.io/" target="_blank" rel="noopener">Bower Configuration</a></li></ul></a>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Web sites are made of lots of things — frameworks, libraries, assets, and utilities. Bower manages all these things for you.&lt;br&gt;Keeping t
      
    
    </summary>
    
      <category term="frontend" scheme="https://salnhan.github.io/categories/frontend/"/>
    
    
      <category term="bower" scheme="https://salnhan.github.io/tags/bower/"/>
    
      <category term="frontend" scheme="https://salnhan.github.io/tags/frontend/"/>
    
  </entry>
  
</feed>
